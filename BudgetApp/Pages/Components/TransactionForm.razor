@using BudgetApp.Domain.Models
@using BudgetApp.Core.Interfaces.Services
@using BudgetApp.Domain.Enums
@using BudgetApp.Infrastructure
@inject ITransactionService TransactionService
@inject DialogService DialogService

<RadzenTemplateForm TItem="TransactionModel" Data="@TransactionModel" Submit="@Submit">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-6" style="width: 90%;">
                <RadzenFieldset Text="Transaction">
                    <div class="row">
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Description"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenTextBox style="width: 100%;" Name="Description" @bind-Value="TransactionModel.Description"/>
                        </div>
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Amount"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenNumeric TValue="decimal" Format="c" Name="Amount" @bind-Value="TransactionModel.Amount"/>
                        </div>
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Status"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="TransactionModel.Status" Data="Enum.GetValues<TransactionStatusEnum>()"></RadzenDropDown>
                        </div>
                        <div class="col-md-4 align-items-center d-flex">
                            <RadzenLabel Text="Account"/>
                        </div>
                        <div class="col-md-8">
                            <RadzenDropDown @bind-Value="TransactionModel.BankAccountId" Data="@BankAccounts" TextProperty="Name" ValueProperty="Id"/>
                        </div>
                    </div>
                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                </RadzenFieldset>
            </div>
        </div>
    </div>
</RadzenTemplateForm>

@code {
    
    [Parameter]
    public int BudgetId { get; init; }

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; init; }

    [Parameter]
    public TransactionModel? Transaction { get; set; }

    [Parameter]
    public List<BankAccountModel> BankAccounts { get; set; }

    private TransactionModel TransactionModel { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        TransactionModel = Transaction ?? new TransactionModel
        {
            Id = int.MinValue,
            BudgetId = BudgetId,
            BankAccountId = BankAccounts.FirstOrDefault(a => a.IsDefault)?.Id ?? 0
        };
    }

    private async Task Submit()
    {
        var authState = await AuthState;
        var userId = authState.User.GetUserId();
        var added = await TransactionService.UpdateTransaction(userId, TransactionModel);
        DialogService.Close(added.Success);
    }
}