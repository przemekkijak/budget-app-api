@using BudgetApp.Core.Features.BankAccounts.Models
@using BudgetApp.Core.Features.BankAccounts.Queries
@using MediatR
@inject IMediator Mediator

<div>
    @if (BankAccounts.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Current Amount</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var account in BankAccounts)
                {
                    <tr>
                        <td>@account.Name</td>
                        <td>@account.Amount zł</td>
                    </tr>
                }
                <tr>
                    <td><strong>Total:</strong></td>
                    <td><strong>@BankAccounts.Sum(a => a.Amount) zł</strong></td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <p>No bank accounts found.</p>
    }
</div>

@code {
    [Parameter]
    public int BudgetId { get; set; }

    private List<BankAccountModel> BankAccounts { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        var getBankAccountsForBudget = new GetBankAccountsForBudget()
        {
            BudgetId = BudgetId
        };

        BankAccounts = await Mediator.Send(getBankAccountsForBudget);
    }
}
